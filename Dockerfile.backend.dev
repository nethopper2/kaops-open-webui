FROM python:3.11-slim

WORKDIR /app

# Install system dependencies including inotify-tools for watching file changes
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    git \
    inotify-tools \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements and install Python dependencies
COPY backend/requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy backend source code
COPY backend/ .

# Set environment variables for Open WebUI
ENV WEBUI_SECRET_KEY="changeme"
ENV DATA_DIR="/app/data"
ENV HF_HOME="/app/data/cache/huggingface"

# Create data directory
RUN mkdir -p /app/data

# Create a startup script that watches for requirements.txt changes
RUN cat > /app/dev-entrypoint.sh << 'EOF'
#!/bin/bash
set -e

echo "⚙️  Starting Backend Development Server with Hot Reload"
echo "========================================================"
echo ""

# Function to install dependencies
install_deps() {
    echo "📦 Installing/updating Python dependencies..."
    pip install --no-cache-dir -r requirements.txt
    echo "✅ Dependencies installed successfully"
}

# Initial install check
if [ "requirements.txt" -nt "/tmp/.requirements_installed" ]; then
    install_deps
    touch /tmp/.requirements_installed
fi

# Start dev server in background
sh dev.sh &
DEV_PID=$!

# Watch for requirements.txt changes
echo "👀 Watching for requirements.txt changes..."
while inotifywait -e modify,create,delete /app/requirements.txt 2>/dev/null; do
    echo "📝 requirements.txt changed, reinstalling dependencies..."
    install_deps
    touch /tmp/.requirements_installed
    echo "🔄 Restarting dev server..."
    kill $DEV_PID 2>/dev/null || true
    sleep 2
    sh dev.sh &
    DEV_PID=$!
done &

# Wait for dev server process
wait $DEV_PID
EOF

RUN chmod +x /app/dev-entrypoint.sh

# Expose backend port
EXPOSE 8080

# Start the development server with auto-install on requirements changes
CMD ["/app/dev-entrypoint.sh"]

